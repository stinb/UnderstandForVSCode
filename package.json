{
	"name": "understand",
	"displayName": "Understand",
	"description": "The Software Developer's Multi-Tool",
	"version": "1.0.18",
	"publisher": "scitools",
	"repository": {
		"type": "git",
		"url": "https://github.com/stinb/UnderstandForVSCode.git"
	},
	"engines": {
		"vscode": "^1.85.0"
	},
	"categories": [
		"Data Science",
		"Visualization"
	],
	"keywords": [
		"Understand",
		"Reference",
		"Definition",
		"Problems",
		"Analysis"
	],
	"icon": "res/logoColor.png",
	"main": "extension.js",
	"activationEvents": [
		"workspaceContains:**/*.und/id.txt"
	],
	"contributes": {
		"commands": [
			{
				"command": "understand.ai.generateAiOverview",
				"title": "AI: Generate AI Overview",
				"category": "Understand"
			},
			{
				"command": "understand.ai.stopAiGeneration",
				"title": "AI: Stop AI Generation",
				"category": "Understand"
			},
			{
				"command": "understand.analysis.analyzeAllFiles",
				"title": "Analysis: Analyze All Files",
				"category": "Understand"
			},
			{
				"command": "understand.analysis.analyzeChangedFiles",
				"title": "Analysis: Analyze Changed Files",
				"category": "Understand"
			},
			{
				"command": "understand.analysis.stopAnalyzingFiles",
				"title": "Analysis: Stop Analyzing Files",
				"category": "Understand"
			},
			{
				"command": "understand.exploreInUnderstand.currentFile",
				"title": "Explore in Understand: Current File",
				"category": "Understand"
			},
			{
				"command": "understand.exploreInUnderstand.newProject",
				"title": "Explore in Understand: New Project",
				"category": "Understand"
			},
			{
				"command": "understand.references.findAllImplementations",
				"title": "References: Find All Implementations",
				"category": "Understand"
			},
			{
				"command": "understand.references.findAllReferences",
				"title": "References: Find All References",
				"category": "Understand"
			},
			{
				"command": "understand.references.goToDeclaration",
				"title": "References: Go to Declaration",
				"category": "Understand"
			},
			{
				"command": "understand.references.goToDefinition",
				"title": "References: Go to Definition",
				"category": "Understand"
			},
			{
				"command": "understand.references.goToImplementations",
				"title": "References: Go to Implementations",
				"category": "Understand"
			},
			{
				"command": "understand.references.goToReferences",
				"title": "References: Go to References",
				"category": "Understand"
			},
			{
				"command": "understand.references.goToTypeDefinition",
				"title": "References: Go to Type Definition",
				"category": "Understand"
			},
			{
				"command": "understand.references.peekDeclaration",
				"title": "References: Peek Declaration",
				"category": "Understand"
			},
			{
				"command": "understand.references.peekDefinition",
				"title": "References: Peek Definition",
				"category": "Understand"
			},
			{
				"command": "understand.references.peekImplementations",
				"title": "References: Peek Implementations",
				"category": "Understand"
			},
			{
				"command": "understand.references.peekReferences",
				"title": "References: Peek References",
				"category": "Understand"
			},
			{
				"command": "understand.references.peekTypeDefinition",
				"title": "References: Peek Type Definition",
				"category": "Understand"
			},
			{
				"command": "understand.settings.showSettings",
				"title": "Settings",
				"category": "Understand"
			},
			{
				"command": "understand.settings.showSettingsProject",
				"title": "Settings: Project",
				"category": "Understand"
			},
			{
				"command": "understand.violations.fix",
				"title": "Violations: Fix",
				"category": "Understand"
			},
			{
				"command": "understand.violations.goToNextViolationInAllFiles",
				"title": "Violations: Go to Next Violation in All Files (Error/Warning/Info)",
				"category": "Understand"
			},
			{
				"command": "understand.violations.goToNextViolationInCurrentFile",
				"title": "Violations: Go to Next Violation in Current File (Error/Warning/Info)",
				"category": "Understand"
			},
			{
				"command": "understand.violations.goToPreviousViolationInAllFiles",
				"title": "Violations: Go to Previous Violation in All Files (Error/Warning/Info)",
				"category": "Understand"
			},
			{
				"command": "understand.violations.goToPreviousViolationInCurrentFile",
				"title": "Violations: Go to Previous Violation in Current File (Error/Warning/Info)",
				"category": "Understand"
			},
			{
				"command": "understand.violations.ignore",
				"title": "Violations: Ignore",
				"category": "Understand"
			},
			{
				"command": "understand.violations.toggleVisibilityAndFocus",
				"title": "Violations: Toggle Visibility and Focus",
				"category": "Understand"
			}
		],
		"configuration": {
			"title": "Understand",
			"properties": {
				"understand.analysis.automaticallyAnalyze": {
					"type": "boolean",
					"default": true,
					"description": "Automatically analyze on project open, file save/create/delete"
				},
				"understand.project.path": {
					"type": "string",
					"description": "Absolute path of the Understand project (PROJECT_NAME.und folder, most likely should be configured in Workspace/Folder Settings)",
					"scope": "machine-overridable"
				},
				"understand.project.pathFindingMethod": {
					"type": "string",
					"default": "Automatic",
					"enum": [
						"Automatic",
						"Manual"
					],
					"description": "Either allow the language server to find the Understand project automatically, or manually set it once"
				},
				"understand.server.communicationProtocol": {
					"type": "string",
					"default": "Named Pipe",
					"enum": [
						"Named Pipe",
						"TCP Socket"
					],
					"description": "Way to communicate with the language server"
				},
				"understand.server.communicationTcpPort": {
					"type": "number",
					"default": 6789,
					"minimum": 0,
					"maximum": 65535,
					"description": "TCP port used if the communication protocol is TCP socket"
				},
				"understand.server.executable": {
					"type": "string",
					"default": "",
					"description": "Command or full path of `userver`, the Understand Language server",
					"scope": "machine-overridable"
				},
				"understand.trace.server": {
					"type": "string",
					"default": "Off",
					"enum": [
						"Off",
						"Messages",
						"Compact",
						"Verbose"
					],
					"description": "Log trace for communication with the language server"
				},
				"understand.violations.hover.detailedDescription": {
					"type": "boolean",
					"default": true,
					"description": "Preview the detailed description of a violation when the mouse hovers on it in the editor"
				}
			}
		},
		"menus": {
			"commandPalette": [
				{
					"command": "understand.ai.generateAiOverview",
					"when": "understandProject && understandFile"
				},
				{
					"command": "understand.ai.stopAiGeneration",
					"when": "understandProject"
				},
				{
					"command": "understand.analysis.analyzeAllFiles",
					"when": "understandProject"
				},
				{
					"command": "understand.analysis.analyzeChangedFiles",
					"when": "understandProject"
				},
				{
					"command": "understand.analysis.stopAnalyzingFiles",
					"when": "understandProject"
				},
				{
					"command": "understand.exploreInUnderstand.currentFile",
					"when": "understandProject && understandFile"
				},
				{
					"command": "understand.exploreInUnderstand.newProject"
				},
				{
					"command": "understand.references.findAllImplementations",
					"when": "understandProject && understandFile"
				},
				{
					"command": "understand.references.findAllReferences",
					"when": "understandProject && understandFile"
				},
				{
					"command": "understand.references.goToDeclaration",
					"when": "understandProject && understandFile"
				},
				{
					"command": "understand.references.goToDefinition",
					"when": "understandProject && understandFile"
				},
				{
					"command": "understand.references.goToImplementations",
					"when": "understandProject && understandFile"
				},
				{
					"command": "understand.references.goToReferences",
					"when": "understandProject && understandFile"
				},
				{
					"command": "understand.references.goToTypeDefinition",
					"when": "understandProject && understandFile"
				},
				{
					"command": "understand.references.peekDeclaration",
					"when": "understandProject && understandFile"
				},
				{
					"command": "understand.references.peekDefinition",
					"when": "understandProject && understandFile"
				},
				{
					"command": "understand.references.peekImplementations",
					"when": "understandProject && understandFile"
				},
				{
					"command": "understand.references.peekReferences",
					"when": "understandProject && understandFile"
				},
				{
					"command": "understand.references.peekTypeDefinition",
					"when": "understandProject && understandFile"
				},
				{
					"command": "understand.violations.fix",
					"when": "understandProject && understandFile && !editorReadonly"
				},
				{
					"command": "understand.violations.goToNextViolationInAllFiles",
					"when": "understandProject"
				},
				{
					"command": "understand.violations.goToNextViolationInCurrentFile",
					"when": "understandProject && understandFile"
				},
				{
					"command": "understand.violations.goToPreviousViolationInAllFiles",
					"when": "understandProject"
				},
				{
					"command": "understand.violations.goToPreviousViolationInCurrentFile",
					"when": "understandProject && understandFile"
				},
				{
					"command": "understand.violations.ignore",
					"when": "understandProject && understandFile && !editorReadonly"
				},
				{
					"command": "understand.violations.toggleVisibilityAndFocus",
					"when": "understandProject"
				}
			]
		},
		"viewsContainers": {
			"activitybar": [
				{
					"icon": "res/logoMonochrome.svg",
					"id": "understand",
					"title": "Understand"
				}
			]
		},
		"views": {
			"understand": [
				{
					"icon": "$(comment)",
					"id": "understand-annotations",
					"name": "Annotations",
					"type": "webview"
				}
			]
		}
	},
	"dependencies": {
		"vscode-languageclient": "^9.0.1"
	},
	"devDependencies": {
		"@types/node": "^20.11.10",
		"@types/vscode": "^1.85.0",
		"@vscode/vsce": "^3.3.2",
		"esbuild": "^0.25.2",
		"typescript": "^5.3.3"
	},
	"scripts": {
		"vscode:prepublish": "npm run esbuild-base -- --minify",
		"esbuild-base": "esbuild ./src/main.ts --bundle --outfile=extension.js --external:vscode --format=cjs --platform=node",
		"esbuild": "npm run esbuild-base -- --sourcemap",
		"esbuild-watch": "npm run esbuild-base -- --sourcemap --watch"
	}
}
